@startuml
class Player {
 String name;
 int hitPoints;
 int experiencePoints;
 int magicPoints;
 Arraylist<IEquippable> equipped;
 Arraylist<IAddable> inventory;
 IWieldable wielding;

 use(IUsable);
 wield(IWieldable);
 addItem(Content);
 dropItem(Content, Room);
 equip(IEquippable);
 unequip(IEquippable);

}

class Apparel {
 String name;
 int additionHP;
}

class Armour {

}

class Cloak {
}

class Room {
 String name;
 String description;
 ArrayList<Content> contents;
}

abstract class Content {
String name;
}

interface IEquippable {
}

interface IWearable {
}

interface IUsable {
}

interface IAddable {
}

interface IDroppable {
}

interface IWieldable {
}

interface IDamage {
}

interface IHeal {
}

class Weapon {
}

class Spell {
 String name;
}

class DamageSpell {
}

class HealingSpell {
}

class Item {
}

IDroppable ... Content
IAddable ... Content
IWieldable ... Weapon
IWieldable ... Spell
IDamage *-- Weapon
Player o-- Weapon : has many
Player o-- Spell : has many
Spell <|-- DamageSpell
IDamage ... DamageSpell
Spell <|-- HealingSpell
IHeal ... HealingSpell
Player o-- Item
IAddable ... Item
IAddable ... Spell
IAddable ... Weapon
IDroppable ... Item
IDroppable ... Weapon
IUsable <|-- IDamage
IUsable <|-- IHeal
IEquippable <|-- IWieldable
IEquippable <|-- IWearable
Content <|-- Weapon
Content <|-- Item
Player --- Room : uses
Content <|-- Apparel
IWearable <|-- Apparel
Apparel <|-- Armour
Apparel <|-- Cloak
@enduml
